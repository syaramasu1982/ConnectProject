// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Uksbs.Connect.AutomatedTests.Features.EndToEndTests.Updated.UAT5
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class MyAnnualLeaveEndToEndAutomationFeature : object, Xunit.IClassFixture<MyAnnualLeaveEndToEndAutomationFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "MyAnnualLeaveRegPackUAT.feature"
#line hidden
        
        public MyAnnualLeaveEndToEndAutomationFeature(MyAnnualLeaveEndToEndAutomationFeature.FixtureData fixtureData, Uksbs_Connect_AutomatedTests_XUnitAssemblyFixture assemblyFixture, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/EndToEndTests/Updated/UAT5", "My Annual Leave End to End Automation", null, ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public void TestInitialize()
        {
        }
        
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        void System.IDisposable.Dispose()
        {
            this.TestTearDown();
        }
        
        [Xunit.SkippableTheoryAttribute(DisplayName="01 Employee creates leave request, manager approves leave request, employee verif" +
            "ies the status and manager deletes approved leaves")]
        [Xunit.TraitAttribute("FeatureTitle", "My Annual Leave End to End Automation")]
        [Xunit.TraitAttribute("Description", "01 Employee creates leave request, manager approves leave request, employee verif" +
            "ies the status and manager deletes approved leaves")]
        [Xunit.TraitAttribute("Category", "smoketest")]
        [Xunit.InlineDataAttribute("Annual Leave Days", "Annual Leave Days", "future date", "future date", "0.50", "Submitted on today", "Pending", "Leave Request", "Everett, Robert", "To action", "0.5 day", "Approved", "Everett, Robert", new string[0])]
        [Xunit.InlineDataAttribute("Annual Leave Days", "Annual Leave Days", "past date", "past date", "0.50", "Submitted on today", "Pending", "Leave Request", "Everett, Robert", "To action", "0.5 day", "Approved", "Everett, Robert", new string[0])]
        [Xunit.InlineDataAttribute("Sickness", "Bacterial", "current date", "current date", "", "Submitted on today", "Pending", "Leave Request", "Everett, Robert", "To action", "1 day", "Approved", "Everett, Robert", new string[0])]
        public void _01EmployeeCreatesLeaveRequestManagerApprovesLeaveRequestEmployeeVerifiesTheStatusAndManagerDeletesApprovedLeaves(string type, string reason, string startDate, string endDate, string duration, string dateSubmitted, string statusPending, string leaveRequest, string empName, string action, string durationDays, string statusApproved, string myDirectReport, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "smoketest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("type", type);
            argumentsOfScenario.Add("reason", reason);
            argumentsOfScenario.Add("startDate", startDate);
            argumentsOfScenario.Add("endDate", endDate);
            argumentsOfScenario.Add("duration", duration);
            argumentsOfScenario.Add("dateSubmitted", dateSubmitted);
            argumentsOfScenario.Add("statusPending", statusPending);
            argumentsOfScenario.Add("leaveRequest", leaveRequest);
            argumentsOfScenario.Add("empName", empName);
            argumentsOfScenario.Add("action", action);
            argumentsOfScenario.Add("durationDays", durationDays);
            argumentsOfScenario.Add("statusApproved", statusApproved);
            argumentsOfScenario.Add("myDirectReport", myDirectReport);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01 Employee creates leave request, manager approves leave request, employee verif" +
                    "ies the status and manager deletes approved leaves", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 5
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 6
 testRunner.Given("I login as an employee", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 7
 testRunner.Then("I should see my annual leave tile in dashboard", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 8
 testRunner.When("I click on create or view leave", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 9
 testRunner.Then("I will be redirected to the my absences page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 10
 testRunner.When("I click on create absence", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 11
 testRunner.Then("I see create absence window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 12
 testRunner.And(string.Format("I select type as \"{0}\"", type), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 13
 testRunner.And(string.Format("I select reason as \"{0}\"", reason), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 14
 testRunner.And(string.Format("I select start date as \"{0}\"", startDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 15
 testRunner.And(string.Format("I select end date as \"{0}\"", endDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 16
 testRunner.And(string.Format("I select duration as \"{0}\"", duration), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 17
 testRunner.And("I click submit button on create absence", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 18
 testRunner.And("I click on close popup button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 19
 testRunner.Then(string.Format("I should see the absence request details in the list as |\"{0}\" \"{1}\" \"{2}\" \"{3}\"|" +
                            "", type, durationDays, dateSubmitted, statusPending), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 20
 testRunner.And("I click on logout button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 22
 testRunner.Given("I login as manager", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 23
 testRunner.Then("I should see my annual leave tile in dashboard", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 24
 testRunner.And("I click on view menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 25
 testRunner.When("I click on notifications", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 26
 testRunner.Then("I should see list of notification and some filters", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 27
 testRunner.When("I click on notification state toaction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 28
 testRunner.Then("I should see leave request details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 29
 testRunner.When(string.Format("I click on leave request to action as |\"{0}\" \"{1}\" \"{2}\"|", leaveRequest, empName, action), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 30
 testRunner.Then("I click on accept button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 31
 testRunner.And("I click on close popup button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 32
 testRunner.And("I click on logout button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 34
 testRunner.Given("I login as an employee", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 35
 testRunner.Then("I should see my annual leave tile in dashboard", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 36
 testRunner.And("I click on view menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 37
 testRunner.When("I click on Absence", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 38
 testRunner.Then("I should see my absense details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 39
 testRunner.When(string.Format("I click on status as \"{0}\"", statusApproved), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 40
 testRunner.Then(string.Format("I should see the absence request details in the list as |\"{0}\" \"{1}\" \"{2}\" \"{3}\"|" +
                            "", type, durationDays, dateSubmitted, statusApproved), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 41
 testRunner.And("I should see holiday balance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 42
 testRunner.And("I click on logout button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 44
 testRunner.Given("I login as manager", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 45
 testRunner.Then("I should see my annual leave tile in dashboard", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 46
 testRunner.And("I click on view menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 47
 testRunner.When("I click on manager absence view", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 48
 testRunner.Then("I should see my direct reports title", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 49
 testRunner.Then("I should see list of my direct reports", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 50
 testRunner.And(string.Format("I click on my direct report as \"{0}\"", myDirectReport), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 51
 testRunner.When("I click on status approved", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 52
 testRunner.Then("I should see all my approved absences", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 53
 testRunner.When(string.Format("I click on leave request to delete as |\"{0}\" \"{1}\" \"{2}\" \"{3}\"|", type, durationDays, dateSubmitted, statusApproved), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 54
 testRunner.Then("I click on delete absence button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableTheoryAttribute(DisplayName="02 Employee creates annual leave and manager declines leave request")]
        [Xunit.TraitAttribute("FeatureTitle", "My Annual Leave End to End Automation")]
        [Xunit.TraitAttribute("Description", "02 Employee creates annual leave and manager declines leave request")]
        [Xunit.TraitAttribute("Category", "smoketest")]
        [Xunit.InlineDataAttribute("Annual Leave Days", "Annual Leave Days", "future date", "future date", "0.50", "Submitted on today", "Pending", "Leave Request", "Everett, Robert", "To action", "0.5 day", "Approved", "Robert Everett", new string[0])]
        [Xunit.InlineDataAttribute("Annual Leave Days", "Annual Leave Days", "past date", "past date", "0.50", "Submitted on today", "Pending", "Leave Request", "Everett, Robert", "To action", "0.5 day", "Approved", "Robert Everett", new string[0])]
        public void _02EmployeeCreatesAnnualLeaveAndManagerDeclinesLeaveRequest(string type, string reason, string startDate, string endDate, string duration, string dateSubmitted, string statusPending, string leaveRequest, string empName, string action, string durationDays, string statusApproved, string myDirectReport, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "smoketest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("type", type);
            argumentsOfScenario.Add("reason", reason);
            argumentsOfScenario.Add("startDate", startDate);
            argumentsOfScenario.Add("endDate", endDate);
            argumentsOfScenario.Add("duration", duration);
            argumentsOfScenario.Add("dateSubmitted", dateSubmitted);
            argumentsOfScenario.Add("statusPending", statusPending);
            argumentsOfScenario.Add("leaveRequest", leaveRequest);
            argumentsOfScenario.Add("empName", empName);
            argumentsOfScenario.Add("action", action);
            argumentsOfScenario.Add("durationDays", durationDays);
            argumentsOfScenario.Add("statusApproved", statusApproved);
            argumentsOfScenario.Add("myDirectReport", myDirectReport);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02 Employee creates annual leave and manager declines leave request", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 64
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 65
 testRunner.Given("I login as an employee", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 66
 testRunner.Then("I should see my annual leave tile in dashboard", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 67
 testRunner.When("I click on i icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 68
 testRunner.Then("I should see annual leave entry from INSS and DIT", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 69
 testRunner.And("I close the i icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 70
 testRunner.And("I should see pie chart in my annual leave tile left side", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 72
 testRunner.And("I should see the days remaining in pie chart as \"Days Remaining\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 73
 testRunner.When("I click on create or view leave", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 74
 testRunner.Then("I will be redirected to the my absences page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 75
 testRunner.And("I click on view menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 76
 testRunner.When("I click on manager absence view", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 77
 testRunner.Then("I should see list of my direct reports", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 78
 testRunner.And("I click on view menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 79
 testRunner.When("I click on notifications", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 80
 testRunner.Then("I should see list of notification and some filters", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 81
 testRunner.And("I click on view menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 82
 testRunner.When("I click on Absence", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 83
 testRunner.Then("I should see my absense details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 84
 testRunner.And("I should see team calendar button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 85
 testRunner.And("I should see create absence button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 86
 testRunner.And("I should see holiday balance", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 87
 testRunner.And("I should see status details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 88
 testRunner.And("I should see a list of my leaves", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 89
 testRunner.When("I click on create absence", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 90
 testRunner.Then("I see create absence window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 91
 testRunner.And(string.Format("I select type as \"{0}\"", type), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 92
 testRunner.And(string.Format("I select reason as \"{0}\"", reason), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 93
 testRunner.And(string.Format("I select start date as \"{0}\"", startDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 94
 testRunner.And(string.Format("I select end date as \"{0}\"", endDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 95
 testRunner.And(string.Format("I select duration as \"{0}\"", duration), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 96
 testRunner.And("I click submit button on create absence", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 97
 testRunner.And("I click on close popup button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 98
 testRunner.And("I click on view menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 99
 testRunner.When("I click on Absence", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 100
 testRunner.Then("I should see my absense details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 101
 testRunner.Then(string.Format("I should see the absence request details in the list as |\"{0}\" \"{1}\" \"{2}\" \"{3}\"|" +
                            "", type, durationDays, dateSubmitted, statusPending), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 102
 testRunner.And("I click on logout button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 104
 testRunner.Given("I login as manager", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 105
 testRunner.Then("I should see my annual leave tile in dashboard", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 106
 testRunner.And("I click on view menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 107
 testRunner.When("I click on notifications", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 108
 testRunner.Then("I should see list of notification and some filters", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 109
 testRunner.When("I click on notification state toaction", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 110
 testRunner.Then("I should see leave request details", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 111
 testRunner.When(string.Format("I click on leave request to action as |\"{0}\" \"{1}\" \"{2}\"|", leaveRequest, empName, action), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 112
 testRunner.Then("I click on decline button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 113
 testRunner.And("I click on close popup button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 114
 testRunner.Then("I click on logout button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableTheoryAttribute(DisplayName="03 Manager to create leave on employee behalf and delete")]
        [Xunit.TraitAttribute("FeatureTitle", "My Annual Leave End to End Automation")]
        [Xunit.TraitAttribute("Description", "03 Manager to create leave on employee behalf and delete")]
        [Xunit.TraitAttribute("Category", "smoketest")]
        [Xunit.InlineDataAttribute("Industrial Action", "Industrial Action", "past date", "past date", "1.00", "Submitted on today", "1 day", "Robert Everett", "Taken", new string[0])]
        [Xunit.InlineDataAttribute("Special Leave Paid", "Training", "future date", "future date", "1.50", "Submitted on today", "1.5 days", "Robert Everett", "Approved", new string[0])]
        [Xunit.InlineDataAttribute("Annual Leave Days", "Annual Leave Days", "future date", "future date", "0.30", "Submitted on today", "0.3 day", "Robert Everett", "Approved", new string[0])]
        public void _03ManagerToCreateLeaveOnEmployeeBehalfAndDelete(string type, string reason, string startDate, string endDate, string duration, string dateSubmitted, string durationDays, string myDirectReport, string status, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "smoketest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("type", type);
            argumentsOfScenario.Add("reason", reason);
            argumentsOfScenario.Add("startDate", startDate);
            argumentsOfScenario.Add("endDate", endDate);
            argumentsOfScenario.Add("duration", duration);
            argumentsOfScenario.Add("dateSubmitted", dateSubmitted);
            argumentsOfScenario.Add("durationDays", durationDays);
            argumentsOfScenario.Add("myDirectReport", myDirectReport);
            argumentsOfScenario.Add("status", status);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03 Manager to create leave on employee behalf and delete", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 122
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 123
 testRunner.Given("I login as manager", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 124
 testRunner.Then("I should see my annual leave tile in dashboard", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 125
 testRunner.And("I click on view menu", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 126
 testRunner.When("I click on manager absence view", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 127
 testRunner.Then("I should see my direct reports title", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 128
 testRunner.Then("I should see list of my direct reports", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 129
 testRunner.And(string.Format("I click on my direct report as \"{0}\"", myDirectReport), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 130
 testRunner.When("I click on create absence", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 131
 testRunner.Then("I see create absence window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 132
 testRunner.And(string.Format("I select type as \"{0}\"", type), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 133
 testRunner.And(string.Format("I select reason as \"{0}\"", reason), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 134
 testRunner.And(string.Format("I select start date as \"{0}\"", startDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 135
 testRunner.And(string.Format("I select end date as \"{0}\"", endDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 136
 testRunner.And(string.Format("I select duration as \"{0}\"", duration), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 137
 testRunner.And("I click submit button on create absence", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 138
 testRunner.And("I click on close popup button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 139
 testRunner.When(string.Format("I click on status as \"{0}\"", status), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 140
 testRunner.Then(string.Format("I should see the absence request details in the list as |\"{0}\" \"{1}\" \"{2}\" \"{3}\"|" +
                            "", type, durationDays, dateSubmitted, status), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 141
 testRunner.When(string.Format("I click on leave request to delete as |\"{0}\" \"{1}\" \"{2}\" \"{3}\"|", type, durationDays, dateSubmitted, status), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 142
 testRunner.Then("I click on delete absence button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 143
 testRunner.And("I click on close popup button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 144
 testRunner.And("I click on logout button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableTheoryAttribute(DisplayName="04 Create sick leave scenario with future date")]
        [Xunit.TraitAttribute("FeatureTitle", "My Annual Leave End to End Automation")]
        [Xunit.TraitAttribute("Description", "04 Create sick leave scenario with future date")]
        [Xunit.TraitAttribute("Category", "smoketest")]
        [Xunit.InlineDataAttribute("Sickness", "Asthma", "future date", "future date", new string[0])]
        public void _04CreateSickLeaveScenarioWithFutureDate(string type, string reason, string startDate, string endDate, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "smoketest"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("type", type);
            argumentsOfScenario.Add("reason", reason);
            argumentsOfScenario.Add("startDate", startDate);
            argumentsOfScenario.Add("endDate", endDate);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("04 Create sick leave scenario with future date", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 154
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 155
 testRunner.Given("I login as an employee", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 156
 testRunner.Then("I should see my annual leave tile in dashboard", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 157
 testRunner.When("I click on create or view leave", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 158
 testRunner.Then("I will be redirected to the my absences page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 159
 testRunner.When("I click on create absence", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 160
 testRunner.Then("I see create absence window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 161
 testRunner.And(string.Format("I select type as \"{0}\"", type), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 162
 testRunner.And(string.Format("I select reason as \"{0}\"", reason), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 163
 testRunner.And(string.Format("I select start date as \"{0}\"", startDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 164
 testRunner.And(string.Format("I select end date as \"{0}\"", endDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 165
 testRunner.And("I should be able to see the submit button disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 166
 testRunner.Then("I click on logout button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                MyAnnualLeaveEndToEndAutomationFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                MyAnnualLeaveEndToEndAutomationFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
